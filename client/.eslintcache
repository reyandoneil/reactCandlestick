[{"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\index.js":"1","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\reportWebVitals.js":"2","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\App.js":"3","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\index.js":"4","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\reducer\\index.js":"5","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\reducer\\stock-reducer.js":"6","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\components\\Home.js":"7","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\action\\index.js":"8","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\action\\stock-action.js":"9","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\components\\Chart.js":"10"},{"size":661,"mtime":1611990138651,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":166,"mtime":1611849266164,"results":"14","hashOfConfig":"12"},{"size":218,"mtime":1611850282639,"results":"15","hashOfConfig":"12"},{"size":141,"mtime":1611851255022,"results":"16","hashOfConfig":"12"},{"size":480,"mtime":1612085508224,"results":"17","hashOfConfig":"12"},{"size":2693,"mtime":1612113843792,"results":"18","hashOfConfig":"12"},{"size":90,"mtime":1612085499265,"results":"19","hashOfConfig":"12"},{"size":14838,"mtime":1612113550063,"results":"20","hashOfConfig":"12"},{"size":2541,"mtime":1612114293413,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1e6vtst",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\index.js",[],["46","47"],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\reportWebVitals.js",[],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\App.js",[],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\index.js",[],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\reducer\\index.js",["48"],"import {} from 'redux'\r\nimport stockReducer from './stock-reducer'",["49","50"],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\reducer\\stock-reducer.js",[],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\components\\Home.js",["51","52","53"],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\action\\index.js",[],"C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\store\\action\\stock-action.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import axios from 'axios'\r\nimport {\r\n    FETCH_STOCK,\r\n    SET_LOADING,\r\n} from './index'\r\n\r\nconst baseUrl = 'http://testfai.herokuapp.com/ticker'\r\n\r\nexport const isLoading = (payload) => {\r\n    return {\r\n        type: SET_LOADING,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport const getMonth = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(isLoading(true))\r\n            const stock = await axios\r\n                .get(baseUrl)\r\n                .then((result) => {\r\n                    const dataStock = result.data.ticker\r\n                    const filterDataStock = dataStock.map((el) => {\r\n                        const timestamp = el.timestamps\r\n                        const date = new Date(el.timestamps)\r\n                        const month = date.getMonth()\r\n                        return {\r\n                            month: month,\r\n                            timeStamp: date,\r\n                            price: el.price,\r\n                        }\r\n                    })\r\n                    const newData = Object.values(filterDataStock.reduce((a, { month, ...props }) => {\r\n                        if (!a[month])\r\n                            a[month] = Object.assign({}, { month, data: [props] });\r\n                        else\r\n                            a[month].data.push(props);\r\n                        return a;\r\n                    }, {}));\r\n                    const detailCandleStick = newData.map(el => {\r\n                        const date = []\r\n                        const data = []\r\n                        el.data.map(el => {\r\n                            data.push(el.price);\r\n                            date.push(el.timeStamp)\r\n                        })\r\n                        return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                    })\r\n                    dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                    dispatch(isLoading(false))\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getDay = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result,'result');\r\n                const dataStock = result.data.ticker\r\n                const filterByDay = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const day = Math.floor(el.timestamps / (1000 * 60 * 60 * 24))\r\n                    return {\r\n                        day: day,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByDay.reduce((a, { day, ...props }) => {\r\n                    if (!a[day])\r\n                        a[day] = Object.assign({}, { day, data: [props] });\r\n                    else\r\n                        a[day].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const get7Hour = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByhour = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const hour = Math.floor(el.timestamps / (1000 * 60 * 60) / 7)\r\n                    return {\r\n                        hour: hour,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByhour.reduce((a, { hour, ...props }) => {\r\n                    if (!a[hour])\r\n                        a[hour] = Object.assign({}, { hour, data: [props] });\r\n                    else\r\n                        a[hour].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const get3Hour = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByhour = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const hour = Math.floor(el.timestamps / (1000 * 60 * 60) / 3)\r\n                    return {\r\n                        hour: hour,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByhour.reduce((a, { hour, ...props }) => {\r\n                    if (!a[hour])\r\n                        a[hour] = Object.assign({}, { hour, data: [props] });\r\n                    else\r\n                        a[hour].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const get30Minute = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByminute = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const minute = Math.floor(el.timestamps / (1000 * 60) / 30)\r\n                    return {\r\n                        minute: minute,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByminute.reduce((a, { minute, ...props }) => {\r\n                    if (!a[minute])\r\n                        a[minute] = Object.assign({}, { minute, data: [props] });\r\n                    else\r\n                        a[minute].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const get15Minute = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByminute = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const minute = Math.floor(el.timestamps / (1000 * 60) / 15)\r\n                    return {\r\n                        minute: minute,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByminute.reduce((a, { minute, ...props }) => {\r\n                    if (!a[minute])\r\n                        a[minute] = Object.assign({}, { minute, data: [props] });\r\n                    else\r\n                        a[minute].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const get5Minute = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByminute = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const minute = Math.floor(el.timestamps / (1000 * 60) / 5)\r\n                    return {\r\n                        minute: minute,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByminute.reduce((a, { minute, ...props }) => {\r\n                    if (!a[minute])\r\n                        a[minute] = Object.assign({}, { minute, data: [props] });\r\n                    else\r\n                        a[minute].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getWeek = () => {\r\n    return async (dispatch) => {\r\n        dispatch(isLoading(true))\r\n        const data = await axios\r\n            .get(baseUrl)\r\n            .then((result) => {\r\n                console.log(result);\r\n                const dataStock = result.data.ticker\r\n                const filterByWeek = dataStock.map(el => {\r\n                    const date = new Date(el.timestamps)\r\n                    const week = Math.floor(el.timestamps / (1000 * 60 * 60 * 24 * 7))\r\n                    return {\r\n                        week: week,\r\n                        date: date,\r\n                        price: el.price\r\n                    }\r\n\r\n                })\r\n                const newData = Object.values(filterByWeek.reduce((a, { week, ...props }) => {\r\n                    if (!a[week])\r\n                        a[week] = Object.assign({}, { week, data: [props] });\r\n                    else\r\n                        a[week].data.push(props);\r\n                    return a;\r\n                }, {}));\r\n                // console.log(newData);\r\n                const detailCandleStick = newData.map(el => {\r\n                    const date = []\r\n                    const data = []\r\n                    el.data.map(el => {\r\n                        data.push(el.price);\r\n                        date.push(el.date)\r\n                    })\r\n                    return { x: date[0], y: [data[0], Math.max.apply(Math, data), Math.min.apply(Math, data), data[data.length - 1]] }\r\n                })\r\n                console.log(detailCandleStick);\r\n                dispatch({ type: FETCH_STOCK, payload: detailCandleStick })\r\n                dispatch(isLoading(false))\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n}\r\n","C:\\Users\\reyand oneil\\Documents\\portofolio\\reactCandlestick\\client\\src\\components\\Chart.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":20},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"81","line":2,"column":36,"nodeType":"77","messageId":"78","endLine":2,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":15,"column":8,"nodeType":"84","endLine":15,"endColumn":19,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":21,"column":8,"nodeType":"84","endLine":21,"endColumn":15,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"88","line":21,"column":19,"nodeType":"77","messageId":"78","endLine":21,"endColumn":24},{"ruleId":"75","severity":1,"message":"89","line":26,"column":31,"nodeType":"77","messageId":"78","endLine":26,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":45,"column":40,"nodeType":"92","messageId":"93","endLine":45,"endColumn":42},{"ruleId":"75","severity":1,"message":"94","line":66,"column":15,"nodeType":"77","messageId":"78","endLine":66,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":92,"column":36,"nodeType":"92","messageId":"93","endLine":92,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":113,"column":15,"nodeType":"77","messageId":"78","endLine":113,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":139,"column":36,"nodeType":"92","messageId":"93","endLine":139,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":161,"column":15,"nodeType":"77","messageId":"78","endLine":161,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":187,"column":36,"nodeType":"92","messageId":"93","endLine":187,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":209,"column":15,"nodeType":"77","messageId":"78","endLine":209,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":235,"column":36,"nodeType":"92","messageId":"93","endLine":235,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":256,"column":15,"nodeType":"77","messageId":"78","endLine":256,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":282,"column":36,"nodeType":"92","messageId":"93","endLine":282,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":303,"column":15,"nodeType":"77","messageId":"78","endLine":303,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":329,"column":36,"nodeType":"92","messageId":"93","endLine":329,"endColumn":38},{"ruleId":"75","severity":1,"message":"94","line":352,"column":15,"nodeType":"77","messageId":"78","endLine":352,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":378,"column":36,"nodeType":"92","messageId":"93","endLine":378,"endColumn":38},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'stockReducer' is defined but never used.","Identifier","unusedVar",["95"],["96"],"'useStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataStock.dataStock'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'oneDay'. Either include it or remove the dependency array.",["98"],"'stock' is assigned a value but never used.","'timestamp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [dataStock.dataStock, isLoading]",{"range":"103","text":"104"},"Update the dependencies array to be: [oneDay, stock]",{"range":"105","text":"106"},[578,589],"[dataStock.dataStock, isLoading]",[693,700],"[oneDay, stock]"]